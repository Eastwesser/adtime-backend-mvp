services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: adtime
      POSTGRES_DB: adtime
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PYTHONPATH: "/app:/backend"
    ports:
      - "8042:8042"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  prometheus:
    networks:
      - default
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./backend/app/core/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - backend

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
  redis_data: