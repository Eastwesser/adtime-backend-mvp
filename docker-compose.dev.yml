version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: adtime_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: adtime
      POSTGRES_DB: adtime
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d adtime"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  redis:
    image: redis:7-alpine
    container_name: adtime_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - default

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: adtime_backend
    ports:
      - "8042:8042"
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:adtime@postgres:5432/adtime"
      REDIS_URL: "redis://redis:6379/0"
      DEBUG: "True"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - default

  prometheus:
    image: prom/prometheus:latest
    container_name: adtime_prometheus
    volumes:
      - ./backend/app/core/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - default
    restart: unless-stopped


  grafana:
    image: grafana/grafana:latest
    container_name: adtime_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./backend/app/core/monitoring/grafana-dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - default
    restart: unless-stopped
    depends_on:
      - prometheus  

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  default:
    driver: bridge  